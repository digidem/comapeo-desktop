# Summary:
#
# Creates a release tag on the release branch when a release candidate PR is merged.
#
# Triggers:
#
# - Merging a PR that targets a base branch that matches `release/**`
#
# Effects:
#
# - Adds a release tag to the release branch name `v${version}` using the merge commit in the targeted `release/**` branch,
#   where `version` is `<minor>.<patch>` e.g. `1.2.0` is truncated to `2.0`.
# - Comments on the the release PR pointing to the tentative GitHub release URL.
# - Creates a release tag named `v${version}` on the merge commit in the targeted `release/**` branch.
#   `version` is `<minor>.<patch>` e.g. `1.2.0` is truncated to `2.0`.
name: Tag Release

on:
  pull_request:
    types:
      - closed
    branches:
      - 'release/**'

jobs:
  tag:
    name: Create release tag
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      version_tag: v${{ steps.version.outputs.release_version_short }}
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - run: npm install --no-save semver
        shell: bash

      - name: Extract release versions
        id: version
        run: |
          release_version_short=$(node -e "const {version} = require('./package.json'); const semver = require('semver'); const parsed = semver.parse(version); console.log(parsed.minor + '.' + parsed.patch);")
          echo "release_version_short=$release_version_short" >> $GITHUB_OUTPUT

      - name: Tag release
        run: |
          git config --global user.name 'awana-release-bot[bot]'
          git config --global user.email '${{ vars.RELEASE_BOT_USER_ID }}+awana-release-bot[bot]@users.noreply.github.com'
          git tag v${{ steps.version.outputs.release_version_short }}
          git push origin v${{ steps.version.outputs.release_version_short }}

  comment:
    name: Comment
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Comment on PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          RELEASE_URL: https://github.com/digidem/comapeo-desktop/releases/tag/${{ needs.tag.outputs.version_tag }}
          COMMENT_BODY: |
            :rocket: A draft release pointing to ${{ github.event.pull_request.merge_commit_sha }} will be created [here](${{ env.RELEASE_URL }}).
        run: |
          gh pr comment $PR_NUMBER --body "$COMMENT_BODY" --repo "$GITHUB_REPOSITORY"
