# Summary:
#
# Reusable workflow for creating the distributable application assets.
name: Create builds

on:
  workflow_call:
    inputs:
      app_type:
        description: 'Type of application. Valid values are: internal, release-candidate, or production.'
        required: true
        type: string
      build_sha:
        description: 'SHA of commit to build'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      app_type:
        description: 'Type of application. Valid values are: internal, or release-candidate'
        required: true
        type: choice
        # We only allow internal and release candidate builds when doing manual dispatches.
        # Production builds should only be triggered by the appropriate calling workflows.
        options: ['internal', 'release-candidate']

# When called from another workflow, the input value is used.
# When called from a manual dispatch, uses the value corresponding to the branch/tag selected in the GitHub UI.
env:
  BUILD_SHA: ${{ inputs.build_sha || github.sha }}

jobs:
  validate_inputs:
    name: Validate inputs
    runs-on: ubuntu-latest
    steps:
      - name: Validate app_type input
        if: ${{ !(inputs.app_type == 'internal' || inputs.app_type == 'release-candidate' || inputs.app_type == 'production') }}
        run: |
          echo "app_type input must be one of the following: internal, release-candidate, production"
          exit 1

  builds:
    name: Create builds
    needs: validate_inputs
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            { name: 'linux', image: 'ubuntu-latest' },
            { name: 'macos', image: 'macos-latest' },
            { name: 'macos-intel', image: 'macos-13' },
            { name: 'windows', image: 'windows-latest' },
          ]
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout repository
        env:
          BUILD_SHA: ${{ env.BUILD_SHA }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ env.BUILD_SHA }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version-file: .nvmrc
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build translations
        run: node --run intl

      - name: Create distributables
        env:
          APP_TYPE: ${{ inputs.app_type }}
          ONLINE_STYLE_URL: ${{ secrets.ONLINE_STYLE_URL }}
          VITE_FEATURE_TEST_DATA_UI: ${{ env.APP_TYPE == 'production' && 'false' || 'true' }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          VITE_MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
        run: node --run forge:make

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: builds-${{ matrix.os.name }}-${{ env.BUILD_SHA }}
          compression-level: 0
          overwrite: true
          if-no-files-found: error
          path: out/distributables
