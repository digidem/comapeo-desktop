# Summary:
#
# Creates a release tag on the release branch when a release candidate PR is merged.
#
# Triggers:
#
# - Merging a PR that targets a base branch that matches `release/**`
#
# Effects:
#
# - Creates a release tag to the release branch named `v${version}` using the merge commit in the targeted `release/**` branch,
#   where `version` is `<minor>.<patch>` e.g. `1.2.0` is truncated to `2.0`.
# - Triggers a production release that creates the builds, creates a (draft) GitHub release, and publishes the assets to that release.
# - Comments on the the release PR pointing to the GitHub release URL.
name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - 'release/**'

jobs:
  tag:
    name: Create tag
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      version_tag: v${{ steps.version.outputs.release_version_short }}
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          sparse-checkout: |
            package.json
          sparse-checkout-cone-mode: false

      - name: Parse version
        id: version
        uses: ./.github/parse-version

      - name: Tag release
        run: |
          git config --global user.name 'awana-release-bot[bot]'
          git config --global user.email '${{ vars.RELEASE_BOT_USER_ID }}+awana-release-bot[bot]@users.noreply.github.com'
          git tag ${{ steps.version.outputs.releaseShort }}
          git push origin git tag ${{ steps.version.outputs.releaseShort }}

  build:
    name: Create builds
    needs: tag
    uses: ./.github/workflows/create-builds.yml
    with:
      app_type: 'production'
      build_sha: ${{ github.sha }}
    secrets: inherit

  comment:
    name: Comment
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Parse version
        id: version
        uses: ./.github/parse-version

      - name: Comment on PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          RELEASE_URL: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.version.outputs.releaseShort }}
          COMMENT_BODY: |
            :rocket: A draft release pointing to ${{ github.event.pull_request.merge_commit_sha }} has been created at ${{ env.RELEASE_URL }}
        run: |
          gh pr comment $PR_NUMBER --body "$COMMENT_BODY" --repo "$GITHUB_REPOSITORY"
