/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MapImport } from './routes/_Map'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingIndexImport } from './routes/Onboarding/index'
import { Route as MapTab2Import } from './routes/_Map/Tab2'
import { Route as MapTab1Import } from './routes/_Map/Tab1'
import { Route as OnboardingPrivacyPolicyScreenImport } from './routes/Onboarding/PrivacyPolicyScreen'
import { Route as OnboardingJoinProjectScreenImport } from './routes/Onboarding/JoinProjectScreen'
import { Route as OnboardingDeviceNamingScreenImport } from './routes/Onboarding/DeviceNamingScreen'
import { Route as OnboardingDataPrivacyImport } from './routes/Onboarding/DataPrivacy'
import { Route as OnboardingCreateProjectScreenImport } from './routes/Onboarding/CreateProjectScreen'
import { Route as OnboardingCreateJoinProjectScreenImport } from './routes/Onboarding/CreateJoinProjectScreen'

// Create/Update Routes

const MapRoute = MapImport.update({
  id: '/_Map',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/Onboarding/',
  path: '/Onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const MapTab2Route = MapTab2Import.update({
  id: '/Tab2',
  path: '/Tab2',
  getParentRoute: () => MapRoute,
} as any)

const MapTab1Route = MapTab1Import.update({
  id: '/Tab1',
  path: '/Tab1',
  getParentRoute: () => MapRoute,
} as any)

const OnboardingPrivacyPolicyScreenRoute =
  OnboardingPrivacyPolicyScreenImport.update({
    id: '/Onboarding/PrivacyPolicyScreen',
    path: '/Onboarding/PrivacyPolicyScreen',
    getParentRoute: () => rootRoute,
  } as any)

const OnboardingJoinProjectScreenRoute =
  OnboardingJoinProjectScreenImport.update({
    id: '/Onboarding/JoinProjectScreen',
    path: '/Onboarding/JoinProjectScreen',
    getParentRoute: () => rootRoute,
  } as any)

const OnboardingDeviceNamingScreenRoute =
  OnboardingDeviceNamingScreenImport.update({
    id: '/Onboarding/DeviceNamingScreen',
    path: '/Onboarding/DeviceNamingScreen',
    getParentRoute: () => rootRoute,
  } as any)

const OnboardingDataPrivacyRoute = OnboardingDataPrivacyImport.update({
  id: '/Onboarding/DataPrivacy',
  path: '/Onboarding/DataPrivacy',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingCreateProjectScreenRoute =
  OnboardingCreateProjectScreenImport.update({
    id: '/Onboarding/CreateProjectScreen',
    path: '/Onboarding/CreateProjectScreen',
    getParentRoute: () => rootRoute,
  } as any)

const OnboardingCreateJoinProjectScreenRoute =
  OnboardingCreateJoinProjectScreenImport.update({
    id: '/Onboarding/CreateJoinProjectScreen',
    path: '/Onboarding/CreateJoinProjectScreen',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_Map': {
      id: '/_Map'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MapImport
      parentRoute: typeof rootRoute
    }
    '/Onboarding/CreateJoinProjectScreen': {
      id: '/Onboarding/CreateJoinProjectScreen'
      path: '/Onboarding/CreateJoinProjectScreen'
      fullPath: '/Onboarding/CreateJoinProjectScreen'
      preLoaderRoute: typeof OnboardingCreateJoinProjectScreenImport
      parentRoute: typeof rootRoute
    }
    '/Onboarding/CreateProjectScreen': {
      id: '/Onboarding/CreateProjectScreen'
      path: '/Onboarding/CreateProjectScreen'
      fullPath: '/Onboarding/CreateProjectScreen'
      preLoaderRoute: typeof OnboardingCreateProjectScreenImport
      parentRoute: typeof rootRoute
    }
    '/Onboarding/DataPrivacy': {
      id: '/Onboarding/DataPrivacy'
      path: '/Onboarding/DataPrivacy'
      fullPath: '/Onboarding/DataPrivacy'
      preLoaderRoute: typeof OnboardingDataPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/Onboarding/DeviceNamingScreen': {
      id: '/Onboarding/DeviceNamingScreen'
      path: '/Onboarding/DeviceNamingScreen'
      fullPath: '/Onboarding/DeviceNamingScreen'
      preLoaderRoute: typeof OnboardingDeviceNamingScreenImport
      parentRoute: typeof rootRoute
    }
    '/Onboarding/JoinProjectScreen': {
      id: '/Onboarding/JoinProjectScreen'
      path: '/Onboarding/JoinProjectScreen'
      fullPath: '/Onboarding/JoinProjectScreen'
      preLoaderRoute: typeof OnboardingJoinProjectScreenImport
      parentRoute: typeof rootRoute
    }
    '/Onboarding/PrivacyPolicyScreen': {
      id: '/Onboarding/PrivacyPolicyScreen'
      path: '/Onboarding/PrivacyPolicyScreen'
      fullPath: '/Onboarding/PrivacyPolicyScreen'
      preLoaderRoute: typeof OnboardingPrivacyPolicyScreenImport
      parentRoute: typeof rootRoute
    }
    '/_Map/Tab1': {
      id: '/_Map/Tab1'
      path: '/Tab1'
      fullPath: '/Tab1'
      preLoaderRoute: typeof MapTab1Import
      parentRoute: typeof MapImport
    }
    '/_Map/Tab2': {
      id: '/_Map/Tab2'
      path: '/Tab2'
      fullPath: '/Tab2'
      preLoaderRoute: typeof MapTab2Import
      parentRoute: typeof MapImport
    }
    '/Onboarding/': {
      id: '/Onboarding/'
      path: '/Onboarding'
      fullPath: '/Onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface MapRouteChildren {
  MapTab1Route: typeof MapTab1Route
  MapTab2Route: typeof MapTab2Route
}

const MapRouteChildren: MapRouteChildren = {
  MapTab1Route: MapTab1Route,
  MapTab2Route: MapTab2Route,
}

const MapRouteWithChildren = MapRoute._addFileChildren(MapRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof MapRouteWithChildren
  '/Onboarding/CreateJoinProjectScreen': typeof OnboardingCreateJoinProjectScreenRoute
  '/Onboarding/CreateProjectScreen': typeof OnboardingCreateProjectScreenRoute
  '/Onboarding/DataPrivacy': typeof OnboardingDataPrivacyRoute
  '/Onboarding/DeviceNamingScreen': typeof OnboardingDeviceNamingScreenRoute
  '/Onboarding/JoinProjectScreen': typeof OnboardingJoinProjectScreenRoute
  '/Onboarding/PrivacyPolicyScreen': typeof OnboardingPrivacyPolicyScreenRoute
  '/Tab1': typeof MapTab1Route
  '/Tab2': typeof MapTab2Route
  '/Onboarding': typeof OnboardingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof MapRouteWithChildren
  '/Onboarding/CreateJoinProjectScreen': typeof OnboardingCreateJoinProjectScreenRoute
  '/Onboarding/CreateProjectScreen': typeof OnboardingCreateProjectScreenRoute
  '/Onboarding/DataPrivacy': typeof OnboardingDataPrivacyRoute
  '/Onboarding/DeviceNamingScreen': typeof OnboardingDeviceNamingScreenRoute
  '/Onboarding/JoinProjectScreen': typeof OnboardingJoinProjectScreenRoute
  '/Onboarding/PrivacyPolicyScreen': typeof OnboardingPrivacyPolicyScreenRoute
  '/Tab1': typeof MapTab1Route
  '/Tab2': typeof MapTab2Route
  '/Onboarding': typeof OnboardingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_Map': typeof MapRouteWithChildren
  '/Onboarding/CreateJoinProjectScreen': typeof OnboardingCreateJoinProjectScreenRoute
  '/Onboarding/CreateProjectScreen': typeof OnboardingCreateProjectScreenRoute
  '/Onboarding/DataPrivacy': typeof OnboardingDataPrivacyRoute
  '/Onboarding/DeviceNamingScreen': typeof OnboardingDeviceNamingScreenRoute
  '/Onboarding/JoinProjectScreen': typeof OnboardingJoinProjectScreenRoute
  '/Onboarding/PrivacyPolicyScreen': typeof OnboardingPrivacyPolicyScreenRoute
  '/_Map/Tab1': typeof MapTab1Route
  '/_Map/Tab2': typeof MapTab2Route
  '/Onboarding/': typeof OnboardingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/Onboarding/CreateJoinProjectScreen'
    | '/Onboarding/CreateProjectScreen'
    | '/Onboarding/DataPrivacy'
    | '/Onboarding/DeviceNamingScreen'
    | '/Onboarding/JoinProjectScreen'
    | '/Onboarding/PrivacyPolicyScreen'
    | '/Tab1'
    | '/Tab2'
    | '/Onboarding'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/Onboarding/CreateJoinProjectScreen'
    | '/Onboarding/CreateProjectScreen'
    | '/Onboarding/DataPrivacy'
    | '/Onboarding/DeviceNamingScreen'
    | '/Onboarding/JoinProjectScreen'
    | '/Onboarding/PrivacyPolicyScreen'
    | '/Tab1'
    | '/Tab2'
    | '/Onboarding'
  id:
    | '__root__'
    | '/'
    | '/_Map'
    | '/Onboarding/CreateJoinProjectScreen'
    | '/Onboarding/CreateProjectScreen'
    | '/Onboarding/DataPrivacy'
    | '/Onboarding/DeviceNamingScreen'
    | '/Onboarding/JoinProjectScreen'
    | '/Onboarding/PrivacyPolicyScreen'
    | '/_Map/Tab1'
    | '/_Map/Tab2'
    | '/Onboarding/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MapRoute: typeof MapRouteWithChildren
  OnboardingCreateJoinProjectScreenRoute: typeof OnboardingCreateJoinProjectScreenRoute
  OnboardingCreateProjectScreenRoute: typeof OnboardingCreateProjectScreenRoute
  OnboardingDataPrivacyRoute: typeof OnboardingDataPrivacyRoute
  OnboardingDeviceNamingScreenRoute: typeof OnboardingDeviceNamingScreenRoute
  OnboardingJoinProjectScreenRoute: typeof OnboardingJoinProjectScreenRoute
  OnboardingPrivacyPolicyScreenRoute: typeof OnboardingPrivacyPolicyScreenRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MapRoute: MapRouteWithChildren,
  OnboardingCreateJoinProjectScreenRoute:
    OnboardingCreateJoinProjectScreenRoute,
  OnboardingCreateProjectScreenRoute: OnboardingCreateProjectScreenRoute,
  OnboardingDataPrivacyRoute: OnboardingDataPrivacyRoute,
  OnboardingDeviceNamingScreenRoute: OnboardingDeviceNamingScreenRoute,
  OnboardingJoinProjectScreenRoute: OnboardingJoinProjectScreenRoute,
  OnboardingPrivacyPolicyScreenRoute: OnboardingPrivacyPolicyScreenRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_Map",
        "/Onboarding/CreateJoinProjectScreen",
        "/Onboarding/CreateProjectScreen",
        "/Onboarding/DataPrivacy",
        "/Onboarding/DeviceNamingScreen",
        "/Onboarding/JoinProjectScreen",
        "/Onboarding/PrivacyPolicyScreen",
        "/Onboarding/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_Map": {
      "filePath": "_Map.tsx",
      "children": [
        "/_Map/Tab1",
        "/_Map/Tab2"
      ]
    },
    "/Onboarding/CreateJoinProjectScreen": {
      "filePath": "Onboarding/CreateJoinProjectScreen.tsx"
    },
    "/Onboarding/CreateProjectScreen": {
      "filePath": "Onboarding/CreateProjectScreen.tsx"
    },
    "/Onboarding/DataPrivacy": {
      "filePath": "Onboarding/DataPrivacy.tsx"
    },
    "/Onboarding/DeviceNamingScreen": {
      "filePath": "Onboarding/DeviceNamingScreen.tsx"
    },
    "/Onboarding/JoinProjectScreen": {
      "filePath": "Onboarding/JoinProjectScreen.tsx"
    },
    "/Onboarding/PrivacyPolicyScreen": {
      "filePath": "Onboarding/PrivacyPolicyScreen.tsx"
    },
    "/_Map/Tab1": {
      "filePath": "_Map/Tab1.tsx",
      "parent": "/_Map"
    },
    "/_Map/Tab2": {
      "filePath": "_Map/Tab2.tsx",
      "parent": "/_Map"
    },
    "/Onboarding/": {
      "filePath": "Onboarding/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
