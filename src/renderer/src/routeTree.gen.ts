/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as HomeImport } from './routes/Home'
import { Route as WelcomeImport } from './routes/Welcome'
import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
	id: '/Welcome',
	path: '/Welcome',
	getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
	id: '/Home',
	path: '/Home',
	getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
	id: '/',
	path: '/',
	getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/'
			path: '/'
			fullPath: '/'
			preLoaderRoute: typeof IndexImport
			parentRoute: typeof rootRoute
		}
		'/Home': {
			id: '/Home'
			path: '/Home'
			fullPath: '/Home'
			preLoaderRoute: typeof HomeImport
			parentRoute: typeof rootRoute
		}
		'/Welcome': {
			id: '/Welcome'
			path: '/Welcome'
			fullPath: '/Welcome'
			preLoaderRoute: typeof WelcomeImport
			parentRoute: typeof rootRoute
		}
	}
}

// Create and export the route tree

export interface FileRoutesByFullPath {
	'/': typeof IndexRoute
	'/Home': typeof HomeRoute
	'/Welcome': typeof WelcomeRoute
}

export interface FileRoutesByTo {
	'/': typeof IndexRoute
	'/Home': typeof HomeRoute
	'/Welcome': typeof WelcomeRoute
}

export interface FileRoutesById {
	__root__: typeof rootRoute
	'/': typeof IndexRoute
	'/Home': typeof HomeRoute
	'/Welcome': typeof WelcomeRoute
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath
	fullPaths: '/' | '/Home' | '/Welcome'
	fileRoutesByTo: FileRoutesByTo
	to: '/' | '/Home' | '/Welcome'
	id: '__root__' | '/' | '/Home' | '/Welcome'
	fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute
	HomeRoute: typeof HomeRoute
	WelcomeRoute: typeof WelcomeRoute
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	HomeRoute: HomeRoute,
	WelcomeRoute: WelcomeRoute,
}

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Home",
        "/Welcome"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Home": {
      "filePath": "Home.tsx"
    },
    "/Welcome": {
      "filePath": "Welcome.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
