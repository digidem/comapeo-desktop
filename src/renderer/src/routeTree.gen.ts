/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as WelcomeImport } from './routes/Welcome'
import { Route as MapMapImport } from './routes/_Map/_Map'
import { Route as MapMapTab1Import } from './routes/_Map/_Map.tab1'
import { Route as MapMapTab2Import } from './routes/_Map/_Map.tab2'
import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
	id: '/Welcome',
	path: '/Welcome',
	getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
	id: '/',
	path: '/',
	getParentRoute: () => rootRoute,
} as any)

const MapMapRoute = MapMapImport.update({
	id: '/_Map/_Map',
	getParentRoute: () => rootRoute,
} as any)

const MapMapTab2Route = MapMapTab2Import.update({
	id: '/tab2',
	path: '/tab2',
	getParentRoute: () => MapMapRoute,
} as any)

const MapMapTab1Route = MapMapTab1Import.update({
	id: '/tab1',
	path: '/tab1',
	getParentRoute: () => MapMapRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/'
			path: '/'
			fullPath: '/'
			preLoaderRoute: typeof IndexImport
			parentRoute: typeof rootRoute
		}
		'/Welcome': {
			id: '/Welcome'
			path: '/Welcome'
			fullPath: '/Welcome'
			preLoaderRoute: typeof WelcomeImport
			parentRoute: typeof rootRoute
		}
		'/_Map/_Map': {
			id: '/_Map/_Map'
			path: ''
			fullPath: ''
			preLoaderRoute: typeof MapMapImport
			parentRoute: typeof rootRoute
		}
		'/_Map/_Map/tab1': {
			id: '/_Map/_Map/tab1'
			path: '/tab1'
			fullPath: '/tab1'
			preLoaderRoute: typeof MapMapTab1Import
			parentRoute: typeof MapMapImport
		}
		'/_Map/_Map/tab2': {
			id: '/_Map/_Map/tab2'
			path: '/tab2'
			fullPath: '/tab2'
			preLoaderRoute: typeof MapMapTab2Import
			parentRoute: typeof MapMapImport
		}
	}
}

// Create and export the route tree

interface MapMapRouteChildren {
	MapMapTab1Route: typeof MapMapTab1Route
	MapMapTab2Route: typeof MapMapTab2Route
}

const MapMapRouteChildren: MapMapRouteChildren = {
	MapMapTab1Route: MapMapTab1Route,
	MapMapTab2Route: MapMapTab2Route,
}

const MapMapRouteWithChildren =
	MapMapRoute._addFileChildren(MapMapRouteChildren)

export interface FileRoutesByFullPath {
	'/': typeof IndexRoute
	'/Welcome': typeof WelcomeRoute
	'': typeof MapMapRouteWithChildren
	'/tab1': typeof MapMapTab1Route
	'/tab2': typeof MapMapTab2Route
}

export interface FileRoutesByTo {
	'/': typeof IndexRoute
	'/Welcome': typeof WelcomeRoute
	'': typeof MapMapRouteWithChildren
	'/tab1': typeof MapMapTab1Route
	'/tab2': typeof MapMapTab2Route
}

export interface FileRoutesById {
	__root__: typeof rootRoute
	'/': typeof IndexRoute
	'/Welcome': typeof WelcomeRoute
	'/_Map/_Map': typeof MapMapRouteWithChildren
	'/_Map/_Map/tab1': typeof MapMapTab1Route
	'/_Map/_Map/tab2': typeof MapMapTab2Route
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath
	fullPaths: '/' | '/Welcome' | '' | '/tab1' | '/tab2'
	fileRoutesByTo: FileRoutesByTo
	to: '/' | '/Welcome' | '' | '/tab1' | '/tab2'
	id:
		| '__root__'
		| '/'
		| '/Welcome'
		| '/_Map/_Map'
		| '/_Map/_Map/tab1'
		| '/_Map/_Map/tab2'
	fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute
	WelcomeRoute: typeof WelcomeRoute
	MapMapRoute: typeof MapMapRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	WelcomeRoute: WelcomeRoute,
	MapMapRoute: MapMapRouteWithChildren,
}

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Welcome",
        "/_Map/_Map"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Welcome": {
      "filePath": "Welcome.tsx"
    },
    "/_Map/_Map": {
      "filePath": "_Map/_Map.tsx",
      "children": [
        "/_Map/_Map/tab1",
        "/_Map/_Map/tab2"
      ]
    },
    "/_Map/_Map/tab1": {
      "filePath": "_Map/_Map.tab1.tsx",
      "parent": "/_Map/_Map"
    },
    "/_Map/_Map/tab2": {
      "filePath": "_Map/_Map.tab2.tsx",
      "parent": "/_Map/_Map"
    }
  }
}
ROUTE_MANIFEST_END */
